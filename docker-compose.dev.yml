services:

  blazegraph:
    container_name: ${COMPOSE_PROJECT_NAME}-blazegraph
    environment:
      QUERY_TIMEOUT: '0'
    image: ${BLAZEGRAPH_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 200k
    ports:
      - ${PORT_BLAZEGRAPH}:8080
    volumes:
      - ${DIRECTORY_BLAZEGRAPH_DATA}:/blazegraph-data:rw
      - ${DIRECTORY_BLAZEGRAPH_EXCHANGE}:/blazegraph-exchange:rw

  metaphactory:
    container_name: ${COMPOSE_PROJECT_NAME}-metaphactory
    depends_on:
      blazegraph:
        condition: service_started
    environment:
      METAPHACTORY_OPTS: METAPHACTORY_OPTS=-Dconfig.storage.rds-global.type=nonVersionedFile -Dconfig.storage.rds-global.mutable=true -Dconfig.storage.rds-global.root=/rdsapps/rds-global
    image: ${METAPHACTORY_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 200k
    ports:
      - ${PORT_RDS}:8080
    volumes:
      - ${DIRECTORY_METAPHACTORY_RUNTIME}:/runtime-data:rw

  jobs:
    container_name: ${COMPOSE_PROJECT_NAME}-jobs
    build: ./services/jobs
    image: swissartresearx/rds-global-jobs
    environment:
      GITHUB_USERNAME_SIKART: ${GITHUB_USERNAME_SIKART}
      GITHUB_TOKEN_SIKART: ${GITHUB_TOKEN_SIKART}
    volumes:
      - ./services/jobs/pipeline:/pipeline
      - ./data:/data
      - ${DIRECTORY_BLAZEGRAPH_DATA}:/blazegraph-data:rw