# https://taskfile.dev

version: '3'

vars:
  PREDICATES_FILE: /pipeline/config/predicates.txt

env:
  BLAZEGRAPH_ENDPOINT: http://blazegraph:8080/blazegraph/sparql
  BLAZEGRAPH_JOURNAL: /blazegraph-data/blazegraph.jnl
  BLAZEGRAPH_RUNNER: /utils/blazegraph-runner/bin/blazegraph-runner

tasks:

  default:
    desc: Run entire pipeline
    cmds:
      - task: update-data-aat
      - task: update-data-geonames
      - task: update-data-gnd
      - task: update-data-sikart
      - task: update-data-thesarchesp
      - task: update-data-thesobjmob
      - task: update-data-ulan
      - task: generate-labels
      - task: ingest-metadata

  generate-labels:
    desc: Generate labels for URIs
    cmds:
      - mkdir -p /pipeline/tmp/requests
      - mkdir -p /pipeline/tmp/responses
      - |
        echo "SELECT ?graph_name ( COUNT ( * ) AS ?count ) WHERE
          {
            GRAPH ?graph_name
            {
              ?subject ?predicates ?label .
            }
          }
        GROUP BY ?graph_name" > /pipeline/tmp/requests/label_count_by_graph.rq
      - $BLAZEGRAPH_RUNNER select --journal=$BLAZEGRAPH_JOURNAL --outformat=json /pipeline/tmp/requests/label_count_by_graph.rq  /pipeline/tmp/responses/label_count_by_graph.json
      - python /pipeline/scripts/updateLabels.py --predicate_file "{{.PREDICATES_FILE}}" --blazegraph_journal "$BLAZEGRAPH_JOURNAL"

  ingest-metadata:
    desc: Ingest metadata
    sources:
      - /data/rds-metadata/_datasetsMetadata.ttl
      - /data/rds-metadata/rds-ontologies-description.ttl
      - /data/rds-metadata/type-mapping.ttl
    cmds:
      - task: _ingest-data-from-file
        vars: 
          NAME: Dataset Metadata
          FILE: /data/rds-metadata/_datasetsMetadata.ttl
          GRAPH: http://rds.swissartresarch.net/graph/datasetMetadata
      - task: _ingest-data-from-file
        vars:
          NAME: RDS Ontologies
          FILE: /data/rds-metadata/rds-ontologies-description.ttl
          GRAPH: http://rds.swissartresarch.net/graph/rdsOntologies
      - task: _ingest-data-from-file
        vars:
          NAME: Type Mappings
          FILE: /data/rds-metadata/type-mapping.ttl
          GRAPH: http://schema.swissartresarch.net/rds/type-mapping


  update-data-aat:
    desc: Update data for Getty AAT
    vars:
      GRAPH: http://vocab.getty.edu/aat/graph
      DATA_DIRECTORY: /data/aat-data
      DATA_URL: http://aatdownloads.getty.edu/VocabData/explicit.zip
      GUNZIP: false
      FILE_FORMAT: nt
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"

  update-data-geonames:
    desc: Update data for GeoNames
    vars:
      GRAPH: http://sws.geonames.org/graph
      DATA_DIRECTORY: /data/geonames-data
      DATA_URL: http://download.geonames.org/all-geonames-rdf.zip
      GUNZIP: false
      FILE_FORMAT: nt
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - echo "Preparing Geonames Data"
      - cp /pipeline/scripts/convert2ntriples.py {{.DATA_DIRECTORY}}/convert2ntriples.py; cd {{.DATA_DIRECTORY}}; python convert2ntriples.py; rm convert2ntriples.py; cd -
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
  
  update-data-gnd:
    desc: Update data for GND
    vars:
      GRAPH: https://d-nb.info/gnd/authorities/graph
      DATA_DIRECTORY: /data/gnd-authorities-data
      DATA_URL: https://data.dnb.de/opendata/authorities-gnd_lds.nt.gz
      GUNZIP: true
      FILE_FORMAT: ttl
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"

  update-data-sikart:
    desc: Update data for SIKART
    vars:
      GRAPH: http://recherche.sik-isea.ch/graph
      DATA_DIRECTORY: /data/sikart-data
      DATA_GIT_REPOSITORY: swiss-art-research-net/sikart-data
      DATA_GIT_PATH: source/SIK_20210616_2300.ttl.zip
      GUNZIP: false
      FILE_FORMAT: ttl
    cmds:
      - task: _downloadFromGitHubAndUnzip
        vars:
          GRAPH: "{{.GRAPH}}"
          DATA_DIRECTORY: "{{.DATA_DIRECTORY}}"
          DATA_GIT_REPOSITORY: "{{.DATA_GIT_REPOSITORY}}"
          DATA_GIT_PATH: "{{.DATA_GIT_PATH}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
          FILE_NAME: "data"
          GITHUB_USERNAME: $GITHUB_USERNAME_SIKART
          GITHUB_TOKEN: $GITHUB_TOKEN_SIKART
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"

  update-data-thesarchesp:
    desc: Update data for Thesaurus Architecture/Espace 
    vars:
      GRAPH: http://data.culture.fr/thesaurus/resource/ark:/67717/T96/graph
      DATA_DIRECTORY: /data/thes-arch-esp-data
      DATA_URL: http://data.culture.fr/thesaurus/data/ark:/67717/T96?includeSchemes=true&format=TURTLE
      GUNZIP: false
      FILE_FORMAT: ttl
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"

  update-data-thesobjmob:
    desc: Update data for Thesaurus Object/Mobiliers
    vars:
      GRAPH: http://Fdata.culture.fr/thesaurus/resource/ark:/67717/T69/graph
      DATA_DIRECTORY: /data/thes-obj-mob-data
      DATA_URL: http://data.culture.fr/thesaurus/data/ark:/67717/T69?includeSchemes=true&format=TURTLE
      GUNZIP: false
      FILE_FORMAT: ttl
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"

  update-data-ulan:
    desc: Update data for Getty ULAN
    vars:
      GRAPH: http://vocab.getty.edu/ulan/graph
      DATA_DIRECTORY: /data/ulan-data
      DATA_URL: http://ulandownloads.getty.edu/VocabData/full.zip
      GUNZIP: false
      FILE_FORMAT: nt
    cmds:
      - task: _downloadAndUnzip
        vars:
          URL: "{{.DATA_URL}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          GUNZIP: "{{.GUNZIP}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
      - task: _removeGraphFromTripleStore
        vars:
          GRAPH: "{{.GRAPH}}"
      - task: _loadDataFromDirectory
        vars:
          GRAPH: "{{.GRAPH}}"
          DIRECTORY: "{{.DATA_DIRECTORY}}"
          FILE_FORMAT: "{{.FILE_FORMAT}}"
    
  _downloadAndUnzip:
    internal: True
    interactive: True
    desc: Download and unzip data
    requires:
      vars: [URL, DIRECTORY, GUNZIP, FILE_FORMAT]
    cmds:
      - # If the directory already exists, ask the user if they want to delete it
      - |
        if [ -d "{{.DIRECTORY }}" ]; then
          read -p "Do you want to remove previous data from the directory and download new ones? (y/n) " REPLY
          echo
          if [[ $REPLY =~ ^[Yy]$ ]]; then
            rm -r -d "{{.DIRECTORY}}"
          fi
        fi
      - # If the directory does not exist, download the data
      - |
        if [ ! -d "{{.DIRECTORY }}" ]; then
          mkdir -p "{{.DIRECTORY}}"
          cd "{{.DIRECTORY}}"
          echo "Fetching datasources..."
          if [ "{{.GUNZIP}}" == true ]; then
            curl -k {{.URL}} -o data.{{.FILE_FORMAT}}.gz
          else
            curl -k {{.URL}} -o data.zip
          fi
          echo "Fetching completed."
        fi
      - |
        if [ "{{.SKIP_UNZIPPING}}" != true ]; then
            echo "Unzip datasources..."
            cd "{{.DIRECTORY}}"
            if [ "{{.USE_GUNZIP}}" == true ]; then
                gunzip data.{{.FILE_FORMAT}}.gz
            else
                unzip data.zip
            fi
            echo "Unzipping completed."
        fi

  _downloadFromGitHubAndUnzip:
    internal: True
    interactive: True
    desc: Download and unzip data from GitHub
    cmds:
      - python /pipeline/scripts/getFileContentsFromGit.py --username "{{.GITHUB_USERNAME}}" --token "{{.GITHUB_TOKEN}}" --repo "{{.DATA_GIT_REPOSITORY}}" --path "{{.DATA_GIT_PATH}}" --localfile "{{.DATA_DIRECTORY}}/{{.FILE_NAME}}.zip"

  _ingest-data-from-file:
    desc: Ingest data from file
    internal: True
    requires:
      vars: [NAME, FILE, GRAPH]
    cmds:
      - $BLAZEGRAPH_RUNNER load --journal=$BLAZEGRAPH_JOURNAL --graph={{.GRAPH}} {{.FILE}}

  _loadDataFromDirectory:
    desc: Load data from directory
    internal: True
    requires:
      vars: [GRAPH, DIRECTORY, FILE_FORMAT]
    cmds:
      - $BLAZEGRAPH_RUNNER load --journal=$BLAZEGRAPH_JOURNAL --graph={{.GRAPH}} {{.DIRECTORY}}/*.{{.FILE_FORMAT}}

  _removeGraphFromTripleStore:
    desc: Remove graph from triple store
    internal: True
    requires:
      vars: [GRAPH]
    cmds:
      - echo "DROP GRAPH <{{.GRAPH}}>" > tmp.rq
      - echo $BLAZEGRAPH_JOURNAL
      - $BLAZEGRAPH_RUNNER update --journal=$BLAZEGRAPH_JOURNAL tmp.rq
      - rm tmp.rq