version: '2.2'

services:

  blazegraph:
    container_name: ${COMPOSE_PROJECT_NAME}-blazegraph
    environment:
      JAVA_OPTS: -Xmx24g
      QUERY_TIMEOUT: '0'
    image: ${BLAZEGRAPH_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 200k
    networks:
      internal:
    #ports:
    #  - 8081:8080
    restart: unless-stopped
    volumes:
      - ${DIRECTORY_BLAZEGRAPH_DATA}:/blazegraph-data:rw
      - ${DIRECTORY_BLAZEGRAPH_EXCHANGE}:/blazegraph-exchange:rw

  metaphactory:
    container_name: ${COMPOSE_PROJECT_NAME}-metaphactory
    depends_on:
      blazegraph:
        condition: service_started
    environment:
      GENERATE_METAPHACTORY_PASSWORD: ''
      JAVA_OPTS: ''
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_HOST: ${HOST_NAME}
      METAPHACTORY_OPTS: METAPHACTORY_OPTS=-Dconfig.storage.rds-global.type=nonVersionedFile -Dconfig.storage.rds-global.mutable=true -Dconfig.storage.rds-global.root=/rdsapps/rds-global
      PLATFORM_OPTS: ${METAPHACTORY_OPTS}
      VIRTUAL_HOST: ${HOST_NAME}
      VIRTUAL_PORT: 8080
    image: ${METAPHACTORY_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: '10'
        max-size: 200k
    networks:
      internal:
      proxy:
    #ports:
    #  - 8080:8080
    restart: unless-stopped
    volumes:
    - ${DIRECTORY_METAPHACTORY_RUNTIME}:/runtime-data:rw

  jobs:
    container_name: ${COMPOSE_PROJECT_NAME}-jobs
    build: ./services/jobs
    image: swissartresearx/rds-global-jobs
    environment:
      GITHUB_USERNAME_SIKART: ${GITHUB_USERNAME_SIKART}
      GITHUB_TOKEN_SIKART: ${GITHUB_TOKEN_SIKART}
    networks:
      internal:
    volumes:
      - ./services/jobs/pipeline:/pipeline
      - ./data:/data
      - ${DIRECTORY_BLAZEGRAPH_DATA}:/blazegraph-data:rw
      
networks:
  internal:
  proxy:
    name: ${PROXY_NETWORK}
    external: true